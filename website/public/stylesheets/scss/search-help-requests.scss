@import "common";

#search-help-requests {
  #content {

    $searchButtonWidth: 4em;

    $howLargerIsSearchFieldThanOtherInputs: 5em;

    .centered {
      width: $fieldWidth + $searchButtonWidth;

      // For the child <span> to be centered in mobile layout
      text-align: center;

      @include desktop {
        width: $fieldWidthDesktop + $searchButtonWidth;

        @include clearfix;

        > * {
          float: left;
        }
      }

      margin-left: auto;
      margin-right: auto;

      > span {
        width: $searchButtonWidth;
      }

      > .field {
        // Since we want a larger than normal search field, we need the wrapper to be bigger as well
        width: $fieldWidth + $howLargerIsSearchFieldThanOtherInputs;

        @include desktop {
          // This is the default value, but was overridden just above
          width: $fieldWidthDesktop;
        }
      }
    }

    #query {
      /* In this specific case, we want a larger search field for the mobile, because the search button is placed
          below, therefore more space is available */
      width: $fieldWidth + $howLargerIsSearchFieldThanOtherInputs;

      @include desktop {
        width: $fieldWidthDesktop;
      }
    }

    // Search results

    .search-result {
      cursor: pointer;
    }

    .floated-wrapper {
      @include clearfix;

      > * {
        float: left;
      }

      > .dates {
        float: right;
      }

      label {
        width: 5em;
      }
    }

    #desktop-results {
      display: none;

      max-width: 50em;

      margin-left: auto;
      margin-right: auto;

      td {
        padding-left: 0.5em;
        padding-right: 0.5em;
      }
    }

    @include desktop {
      #mobile-results {
        display: none;
      }

      #desktop-results {
        display: block;
      }
    }

    .requester-username,
    .requester-city {
      text-align: center;
    }

    #search-returned-nothing {
      display: none;
      text-align: center;
    }
  }
}
