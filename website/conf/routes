# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Boilerplate
GET     /crossdomain.xml            controllers.Assets.at(path="/public", file="crossdomain.xml")
GET     /robots.txt                 controllers.Assets.at(path="/public", file="robots.txt")

# Pages
GET     /                           controllers.Application.index
GET     /join                       controllers.Application.join
GET     /login                      controllers.Application.login
GET     /logout                     controllers.Application.logout
GET     /home                       controllers.Application.home
GET     /my-profile                 controllers.Application.myProfile
GET     /my-profile/edit            controllers.Application.editProfile
GET     /users/:username            controllers.Application.profile(username: String)
GET     /help                       controllers.Application.helpDashboard
GET     /help-requests              controllers.Application.searchHelpRequests
GET     /help-requests/new          controllers.Application.createHelpRequest
GET     /help-requests/:id          controllers.Application.viewHelpRequest(id: Int)
GET     /help-requests/edit/:id     controllers.Application.editHelpRequest(id: Int)
GET     /messages                   controllers.Application.msgInbox
GET     /messages/sent              controllers.Application.sentMessages
GET     /messages/new               controllers.Application.createMessage
GET     /messages/:id               controllers.Application.viewMessage(id: Int)

# API
POST    /api/users                  controllers.api.UserApi.create
PUT     /api/users                  controllers.api.UserApi.update
GET     /api/users                  controllers.api.UserApi.get
GET     /api/users/first            controllers.api.UserApi.getFirst
POST    /api/authenticate           controllers.api.AuthApi.authenticate
POST    /api/help-requests          controllers.api.HelpRequestApi.create
PUT     /api/help-requests          controllers.api.HelpRequestApi.update
GET     /api/help-requests          controllers.api.HelpRequestApi.get
# ?isOwnFiltered=true to avoid own requests being returned

DELETE  /api/help-requests          controllers.api.HelpRequestApi.delete
POST    /api/help-requests/subscribe-to-replies   controllers.api.HelpRequestApi.subscribeTo
DELETE  /api/help-requests/subscribe-to-replies   controllers.api.HelpRequestApi.unsubscribeFrom
POST    /api/help-replies           controllers.api.HelpReplyApi.create
POST    /api/db/admin               controllers.api.DbAdminApi.createTables
DELETE  /api/db/admin               controllers.api.DbAdminApi.dropTables
POST    /api/references             controllers.api.ReferenceApi.create
POST    /api/messages               controllers.api.MessageApi.create

# Files
GET     /files/profile-pic/:userId      controllers.FileController.serveProfilePicture(userId: Int)
# ?isTemp=true for temp picture

POST    /files/profile-pic              controllers.FileController.uploadProfilePicture